{"ast":null,"code":"const generateGameItemsArr = emojiOccurrences => {\n  const emojiList = Object.keys(emojiOccurrences);\n  const gameItemsArr = [];\n  emojiList.forEach(emoji => {\n    const color = '#fac858';\n    for (let i = 0; i < emojiOccurrences[emoji]; i++) {\n      gameItemsArr.push({\n        name: emoji,\n        color,\n        position: [null, null, null],\n        display: false\n      });\n    }\n  });\n  return gameItemsArr;\n};\nconst emojiOccurrences = {\n  '🌍': 3,\n  '🤔': 3,\n  '😂': 3,\n  '🔥': 3,\n  '🀄️': 3,\n  '🌛': 3,\n  '🐱': 3,\n  '🐶': 3,\n  '👊': 3,\n  '🐩': 3,\n  '🛁': 3,\n  '🥷': 3\n};\nconst gameItemsArr = generateGameItemsArr(emojiOccurrences);\nexport const itemsArr = level => {\n  // Game items generation logic here\n  let arr = [...gameItemsArr];\n  // 每层有多少item\n  const floorItemsArr = [9, 16, 25, 36, 49, 64, 81];\n  const floorNumsArr = [3, 4, 5, 6, 7, 8, 9];\n\n  // 每个等级有多少空item数组\n  const noItemsNum = [7, 14, 14, 24, 49, 40];\n  // 每个等级有多少item数组\n  const itemsNum = [18, 36, 72, 111, 150, 240];\n\n  // 空item数组\n  const noItemsArr = [];\n  let i = noItemsNum[level - 1];\n  while (i > 0) {\n    noItemsArr.push({\n      name: '',\n      color: '',\n      position: [null, null, null],\n      display: false\n    });\n    i--;\n  }\n\n  // 最后不完整的取几个\n  const getArrItems = itemsNum[level - 1] / 3 % 12 * 3;\n  const otherItemsArr = arr.map((i, index) => {\n    if (index < getArrItems) {\n      return i;\n    }\n    return null;\n  }).filter(i => i);\n  let itemsNumsArr = [];\n  if (level === 1) {\n    itemsNumsArr = otherItemsArr;\n  }\n  if (level === 2) {\n    itemsNumsArr = arr;\n  }\n  if (level === 3) {\n    itemsNumsArr = arr.concat(arr);\n  }\n  if (level === 4) {\n    arr = [...gameItemsArr];\n    itemsNumsArr = arr.concat(arr, arr, otherItemsArr);\n  }\n  if (level === 5) {\n    arr = [...gameItemsArr];\n    itemsNumsArr = arr.concat(arr, arr, arr, otherItemsArr);\n  }\n  if (level === 6) {\n    arr = [...gameItemsArr];\n    itemsNumsArr = arr.concat(arr, arr, arr, arr, arr, otherItemsArr);\n  }\n  const allItems = itemsNumsArr.concat(noItemsArr).sort(() => Math.random() - 0.5);\n  const resultArr = [];\n  floorItemsArr.splice(0, level + 1).map((item, fIndex) => {\n    resultArr.push(allItems.splice(0, item));\n  });\n  const zIndex = [6, 5, 4, 3, 2, 1];\n  return resultArr.map((item, index) => {\n    return {\n      arr: [...item.map((i, j) => {\n        i.position = [index + 1, parseInt(j / floorNumsArr[index]) + 1, (j + 1) % floorNumsArr[index] || floorNumsArr[index]];\n        return {\n          ...i\n        };\n      })],\n      zIndex: zIndex[index],\n      width: (index + 3) * 55\n    };\n  });\n};\nexport const isItemCanClick = (item, allItems) => {\n  var _allItems;\n  // Clickability logic here\n  const nowItem = {\n    ...item\n  };\n  const nowItemFloor = nowItem.position[0];\n  // 最底下层不判断\n  // if (nowItemFloor === allItems.length) return;\n\n  const upFloor = ((_allItems = allItems[nowItemFloor - 2]) === null || _allItems === void 0 ? void 0 : _allItems.arr.filter(itemNow => itemNow.name !== '')) || [];\n  if (upFloor.length === 0) return true;\n  let midArr = [];\n  upFloor.map(itemNowM => {\n    const position = itemNowM.position;\n    const a = [position[0] + 1, position[1], position[2]];\n    const b = [position[0] + 1, position[1], position[2] + 1];\n    const c = [position[0] + 1, position[1] + 1, position[2]];\n    const d = [position[0] + 1, position[1] + 1, position[2] + 1];\n    midArr.push(a);\n    midArr.push(b);\n    midArr.push(c);\n    midArr.push(d);\n  });\n  const isCanClick = midArr.filter(mItem => nowItem.position[0] === mItem[0] && nowItem.position[1] === mItem[1] && nowItem.position[2] === mItem[2]).length === 0;\n  return isCanClick;\n};","map":{"version":3,"names":["generateGameItemsArr","emojiOccurrences","emojiList","Object","keys","gameItemsArr","forEach","emoji","color","i","push","name","position","display","itemsArr","level","arr","floorItemsArr","floorNumsArr","noItemsNum","itemsNum","noItemsArr","getArrItems","otherItemsArr","map","index","filter","itemsNumsArr","concat","allItems","sort","Math","random","resultArr","splice","item","fIndex","zIndex","j","parseInt","width","isItemCanClick","nowItem","nowItemFloor","upFloor","itemNow","length","midArr","itemNowM","a","b","c","d","isCanClick","mItem"],"sources":["/Users/fenggao/Documents/FrontEndProject/EmojiExplorer/src/helpers/gameHelpers.js"],"sourcesContent":["const generateGameItemsArr = (emojiOccurrences) => {\n    const emojiList = Object.keys(emojiOccurrences);\n    const gameItemsArr = [];\n  \n    emojiList.forEach((emoji) => {\n      const color = '#fac858';\n      for (let i = 0; i < emojiOccurrences[emoji]; i++) {\n        gameItemsArr.push({ name: emoji, color, position: [null, null, null], display: false });\n      }\n    });\n  \n    return gameItemsArr;\n};\n\nconst emojiOccurrences = {\n    '🌍': 3,\n    '🤔': 3,\n    '😂': 3,\n    '🔥': 3,\n    '🀄️': 3,\n    '🌛': 3,\n    '🐱': 3,\n    '🐶': 3,\n    '👊': 3,\n    '🐩': 3,\n    '🛁': 3,\n    '🥷': 3,\n  };\nconst gameItemsArr = generateGameItemsArr(emojiOccurrences);\n\nexport const itemsArr = (level) => {\n    // Game items generation logic here\n        let arr = [...gameItemsArr];\n        // 每层有多少item\n        const floorItemsArr = [9, 16, 25, 36, 49, 64, 81];\n        const floorNumsArr = [3, 4, 5, 6, 7, 8, 9];\n      \n        // 每个等级有多少空item数组\n        const noItemsNum = [7, 14, 14, 24, 49, 40];\n        // 每个等级有多少item数组\n        const itemsNum = [18, 36, 72, 111, 150, 240];\n      \n        // 空item数组\n        const noItemsArr = [];\n        let i = noItemsNum[level - 1];\n        while (i > 0) {\n            noItemsArr.push({name: '', color: '', position: [null, null, null], display: false});\n            i--;\n        }\n      \n        // 最后不完整的取几个\n        const getArrItems = ((itemsNum[level - 1] / 3) % 12) * 3;\n        const otherItemsArr = arr\n            .map((i, index) => {\n                if (index < getArrItems) {\n                    return i;\n                }\n                return null;\n            })\n            .filter((i) => i);\n        let itemsNumsArr = [];\n        if (level === 1) {\n            itemsNumsArr = otherItemsArr;\n        }\n        if (level === 2) {\n            itemsNumsArr = arr;\n        }\n        if (level === 3) {\n            itemsNumsArr = arr.concat(arr);\n        }\n        if (level === 4) {\n            arr = [...gameItemsArr];\n            itemsNumsArr = arr.concat(arr, arr, otherItemsArr);\n        }\n        if (level === 5) {\n            arr = [...gameItemsArr];\n            itemsNumsArr = arr.concat(arr, arr, arr, otherItemsArr);\n        }\n        if (level === 6) {\n            arr = [...gameItemsArr];\n            itemsNumsArr = arr.concat(arr, arr, arr, arr, arr, otherItemsArr);\n        }\n      \n        const allItems = itemsNumsArr.concat(noItemsArr).sort(() => Math.random() - 0.5);\n      \n        const resultArr = [];\n      \n        floorItemsArr.splice(0, level + 1).map((item, fIndex) => {\n            resultArr.push(allItems.splice(0, item));\n        });\n      \n      \n        const zIndex = [6, 5, 4, 3, 2, 1];\n        return resultArr.map((item, index) => {\n            return {\n                arr: [\n                    ...item.map((i, j) => {\n                        i.position = [index + 1, parseInt(j / floorNumsArr[index]) + 1, (j + 1) % floorNumsArr[index] || floorNumsArr[index]];\n                        return {...i};\n                    }),\n                ],\n                zIndex: zIndex[index],\n                width: (index + 3) * 55,\n            };\n        });\n};\n  \nexport const isItemCanClick = (item, allItems) => {\n    // Clickability logic here\n    const nowItem = {...item};\n    const nowItemFloor = nowItem.position[0];\n    // 最底下层不判断\n    // if (nowItemFloor === allItems.length) return;\n  \n    const upFloor = allItems[nowItemFloor - 2]?.arr.filter((itemNow) => itemNow.name !== '') || [];\n  \n    if (upFloor.length === 0) return true;\n    let midArr = [];\n    upFloor.map((itemNowM) => {\n        const position = itemNowM.position;\n        const a = [position[0] + 1, position[1], position[2]];\n        const b = [position[0] + 1, position[1], position[2] + 1];\n        const c = [position[0] + 1, position[1] + 1, position[2]];\n        const d = [position[0] + 1, position[1] + 1, position[2] + 1];\n        midArr.push(a);\n        midArr.push(b);\n        midArr.push(c);\n        midArr.push(d);\n    });\n  \n    const isCanClick =\n        midArr.filter((mItem) => nowItem.position[0] === mItem[0] && nowItem.position[1] === mItem[1] && nowItem.position[2] === mItem[2])\n            .length === 0;\n  \n    return isCanClick;\n};\n\n\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}